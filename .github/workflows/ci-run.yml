name: CI - Ejecutar notebooks TFM
on:
  push:
  pull_request:
  workflow_dispatch:   # ← esto permite lanzarlo manualmente desde Actions

jobs:
  run-notebooks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configurar Python 3.12.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.9'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements_tfm.txt ]; then
            pip install -r requirements_tfm.txt
          else
            pip install jupyter nbconvert ipykernel numpy pandas scikit-learn matplotlib plotly seaborn
          fi
          pip install nbclient  # recomendado para que nbconvert ejecute notebooks

      - name: Preparar carpetas
        run: |
          mkdir -p data/raw data/processed export_dashboard

           - name: Ejecutar notebook 1 (debug + comodín)
        run: |
          echo "== PWD ==" && pwd
          echo "== LISTA notebooks ==" && ls -lah notebooks || true
          NB1=$(ls -1 notebooks/1_eda_sesgos_twoyears_propublica*.ipynb 2>/dev/null | head -n 1 || true)
          if [ -z "$NB1" ]; then
            echo "::error::No se encontró notebooks/1_eda_sesgos_twoyears_propublica*.ipynb en esta rama/commit";
            exit 1
          fi
          echo "Ejecutando: $NB1"
          jupyter nbconvert --execute --to notebook --inplace --ExecutePreprocessor.timeout=900 "$NB1"


      - name: Ejecutar 2_evaluacion_y_regresion_logisitca
        run: |
          jupyter nbconvert --execute --to notebook --inplace "notebooks/2_evaluacion_y_regresion_logisitca.ipynb"

      - name: Ejecutar 3_analisis_controversia_propublica
        run: |
          jupyter nbconvert --execute --to notebook --inplace "notebooks/3_analisis_controversia_propublica.ipynb"

      - name: Comprobar salidas esperadas (si aplican)
        run: |
          test -f export_dashboard/metricas_globales.csv || echo "AVISO: falta export_dashboard/metricas_globales.csv"
          test -f export_dashboard/metricas_por_grupo.csv || echo "AVISO: falta export_dashboard/metricas_por_grupo.csv"

